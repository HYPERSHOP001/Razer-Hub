local Players = game:GetService("Players")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HR = Char:WaitForChild("HumanoidRootPart")
local StandHR = HR.CFrame

-- Equip item function
equipitem = function(v)
    if LocalPlayer.Backpack:FindFirstChild(v) then
        local Eq = LocalPlayer.Backpack:FindFirstChild(v)
        LocalPlayer.Character.Humanoid:EquipTool(Eq)
    end
end

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Razer Hub" .. Fluent.Version,
    SubTitle = "by 001x",
    TabWidth = 100,
    Size = UDim2.fromOffset(555,355 ),
    Acrylic = true,
    Theme = "Light",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
}

Fluent:Notify({
    Title = "Razer Hub",
    Content = "Welcome",
    SubContent = "by", -- Optional
    Duration = 100
})

local AutoShakeToggle = Tabs.Main:AddToggle("Freeze", {Title = "Freeze", Default = false })
AutoShakeToggle:OnChanged(function(state)
    Char.HumanoidRootPart.Anchored = state
end)

-- equipitem
spawn(function()
    while wait() do
        if _G.AutoCast then
            pcall(function()
                for i,v in pairs(LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA ("Tool") and v.Name:lower():find("rod") then
                    equipitem(v.Name)
                    end
                end
            end)
        end
    end
end)
local AutoShakeToggle = Tabs.Main:AddToggle("Autoholdrod", {Title = "Auto holdrod", Default = false })
AutoShakeToggle:OnChanged(function(state)
    _G.AutoCast = state
    spawn(function()
        while _G.AutoCast do 
            wait(0.1)
            for i, v in pairs(LocalPlayer.Backpack:GetChildren()) do
                if v:IsA("Tool") and v.Name:lower():find("rod") then
                    equipitem(v.Name)
                end
            end
        end
    end)
end)

-- AutoCast Toggle
local AutoCastToggle = Tabs.Main:AddToggle("AutoCast", {Title = "Auto Cast", Default = false })
AutoCastToggle:OnChanged(function(state)
    _G.AutoCast = state
    spawn(function()
        while _G.AutoCast do 
            wait(0.1)
            pcall(function()
                local Rod = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                if Rod and Rod:FindFirstChild("events") then
                    Rod.events.cast:FireServer(100, 1)
                end
            end)
        end
    end)
end)
-- AutoShake Toggle
local AutoShakeToggle = Tabs.Main:AddToggle("AutoShake", {Title = "Auto Shake", Default = false })
AutoShakeToggle:OnChanged(function(state)
    _G.AutoShake = state
    spawn(function()
        while _G.AutoShake do
            wait(0.01)
            pcall(function()
                local GUI = LocalPlayer:WaitForChild("PlayerGui")
                local shakeui = GUI:WaitForChild("shakeui")
                if shakeui and shakeui.Enabled then
                    local safezone = shakeui:FindFirstChild("safezone")
                    if safezone then
                        local button = safezone:FindFirstChild("button")
                        if button and button:IsA("ImageButton") and button.Visible then
                            GuiService.SelectedCoreObject = button
                            VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                            VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                        end
                    end
                end
            end)
        end
    end)
end)

-- AutoReel Toggle
local AutoReelToggle = Tabs.Main:AddToggle("AutoReel", {Title = "Auto Reel", Default = false })
AutoReelToggle:OnChanged(function(state)
    _G.AutoReel = state
    spawn(function()
        while _G.AutoReel do
            wait(0.1)
            pcall(function()
                local reelfinished = ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished")
                for _, v in pairs(LocalPlayer.PlayerGui:GetChildren()) do
                    if v:IsA("ScreenGui") and v.Name == "reel" then
                        if v:FindFirstChild("bar") then
                            wait(1)
                            reelfinished:FireServer(100, true)
                        end
                    end
                end
            end)
        end
    end)
end)
